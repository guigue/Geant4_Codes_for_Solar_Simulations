-------------------------------------------------------------------

     =========================================================
     Geant4 - an Object-Oriented Toolkit for Simulation in HEP
     =========================================================
     
                    GUIDING CENTRE EXAMPLES
                    
1- Geometry Definition
                    
We carry out our tests within the framework of a model in which primary accelerated particles
(protons or electrons) are injected into a target with characteristics similar to those of 
the ambient solar atmosphere. We adopt a simple plane-parallel geometry for
the vertical structure of the ambient solar atmosphere. This geometry is adequate for a
single active region, usually with a scale (~<10⁴ km ) much less than the solar radius
(7 × 10⁵ km). We consider a cubic box centred at the origin of a Cartesian coordinate system
(Ox, Oy, Oz) with edges of length 2L = 1.3 × 10⁴ km and faces perpendicular to the coordinate axes.
The z-coordinate corresponds to the height
in the ambient solar atmosphere. 

The box is filled with a neutral material for which we assume a typical solar atmosphere 
composition with ⁴He, C, N and O abundances relative to H given by Asplund
et al. (2009). Our assumption of a neutral medium is appropriate to the photosphere and 
consistent with previous treatments of gamma-ray line producion (Murphy et al., 2007; Trottet et al., 2015).
A xy-plane at z = 0 divides the box into two half-spaces. The half-space at z > 0 represents the coronal region for which
we assume a density ρ = 10⁻¹³g/cm3. The half-space at z < 0 represents the chromo-
spheric/photospheric region for which we assume a density ρ = 4 · 10⁻⁷ g/cm3 , obtaining
a column density ρL ≃ 255 g/cm2 which is greater than the stopping depth (or range)
R = 158.7 g/cm2 of a 1 GeV proton in a hydrogen target (Berger et al., 2005)).

In the Detector_Construction.cc class is declared a set of User Limits to limitate particles trapped at the Solar corona.
The limitations could set by MaxTrackLength, UserMaxTime or SetMaxAllowedStep.

2- Dipole 

For the Analytic Dipoles (Single and double) is declared in Solar_Dipole class. The values of the dipole and double dipole could be changed
at Solar_Dipole.hh.

    G4double B0 = 0.1* tesla; // Magnetic Field Strength at the footpoint
    G4double Rs = 6.96e8*m; // Solr Radius
    G4double Rf = 0.010*Rs; // Half length between footpoints
    G4double lz = 0.0267632*Rs;  // loop top z-coordinate (meter)
    G4double lh = 0.0152632*Rs;  // loop height (meter)
    G4double dz = (lz - lh);  // dipoloe depth (meter)
    
For the Tabulated Field, the dipole is passed to an external file at Solar_FieldSetup.cc and interpreted by Solar_TabulatedField.
The txt dipoles examples where generated by a Python code. It is possible to use different magnetic fields if the file brings the
x, y, z positions and Bx, By and Bz magntetic field strengths.


3- Guiding Center Equation

The details of Guiding Center Equation are described in the Solar_GC. The complete GC equation is 'GC equations of motion including drift'
even it's possible to use GC neglecting drift. 

Just for tests and comparisions, the Newton Lorentz equations based on the G4 codes (RHS equations of motion) are in the same class. 
In case you need to use a different equation, just uncomment it and comment the active one.


4- Sensitive Detector

At the Solar_SD class, particulary at ProcessHits function we define and set the conditions to get the hits we're intersested in.
In the examples we use three conditions:

SDet1 == "CoronaSD" -> The particle is in the Corona.
&& condition == true -> Is the first step of the particle at the corona.
&& particle == "e-" -> The particle is an e-

This way we get secondary electrons produced at by primary particles crossing the boundary between the Atmospher/Chromosphere and the Corona.
There are several ways to play with conditions to get what exactly you want for the simulation. 

HOW TO RUN

from the directory e.g /g4work/GC_Analytic_dipole

mkdir build 
cd build
mkdir analysis
cmake ..
make
./solar -m macrofile.mac -t 1   Where -m is followed by macro file name and -t is followed by the number of threads desired.



